---
import Layout from '../layouts/Layout.astro';
import HeroSection from '../components/HeroSection.astro';
import Blog from '../components/Blog.astro';
import CallToAction from '../components/CallToAction.astro';
import Features from '../components/Features.astro';
import Videos from '../components/Videos.astro';
import Stats from '../components/Stats.astro';
import Testimonials from '../components/Testimonials.astro';
import { BIOGRAPHY } from '../consts';
import projects from './projects/projects';
import { getCollection } from 'astro:content';
import { getVideoInfoFromRSS } from '../youtube';

const videos = await getVideoInfoFromRSS("UC8KCb358oioQMcJ5pUfs8UQ");

const posts = (await getCollection('blog')).map((post) => {
	const slug = `/blog/${post.slug}`;
	return {
		...post,
		data: {
			...post.data,
			url:slug,
		},
	}
});

// Define sorting function for blog posts
const blogSortFunction = (a: any, b: any) => {
	// First sort by priority (higher priority first)
	const priorityDiff = b.data.priority - a.data.priority;
	if (priorityDiff !== 0) return priorityDiff;
	
	// If priorities are equal, sort by publish date (newer first)
	return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
};


const bookshelf = (await getCollection('bookshelf')).map((book) => {
	const slug = `/bookshelf#${book.slug}`;
	return {
		...book,
		data: {
			...book.data,
			url:slug,
		},
	}
})

const trimmedDescription = bookshelf.map((book) => {
	let trimmedDescription = book.data.description.substring(0, 100);
	if (book.data.description.length > 100) {
		trimmedDescription += '...';
	}
	return {
		...book,
		data: {
			...book.data,
			description: trimmedDescription,
		},
	};
});

// Define sorting function for books
const bookshelfSortFunction = (a: any, b: any) => {
	// First sort by priority (higher priority first)
	const priorityDiff = b.data.priority - a.data.priority;
	if (priorityDiff !== 0) return priorityDiff;
	
	// If priorities are equal, sort by rating (higher rating first)
	return b.data.rating - a.data.rating;
};

// Define sorting function for projects
const projectsSortFunction = (a: any, b: any) => {
	// First sort by priority (higher priority first)
	const priorityDiff = b.data.priority - a.data.priority;
	if (priorityDiff !== 0) return priorityDiff;
	
	// If priorities are equal, sort by title alphabetically
	return a.data.title.toLowerCase() > b.data.title.toLowerCase() ? 1 : -1;
};
---

<Layout title="Antonio Feregrino" description={BIOGRAPHY} language="en">
	<main class="space-y-10 mb-40">
		<HeroSection/>
		<Features anchor="projects" title="Projects" description="Some of the projects I have created or worked on" collection={projects} sortFunction={projectsSortFunction} />
		<Features anchor="blog" title="Blog" description="Here is some stuff I've written" collection={posts} sortFunction={blogSortFunction} />
		<Features anchor="bookshelf" title="Book recommendations" description="Lately I have been reading a lot, so here are my recommendations" collection={trimmedDescription} sortFunction={bookshelfSortFunction} />
		<Videos anchor="videos" title="Videos" description="Here are some videos I've made" collection={videos} />

	</main>

	</Layout>