---
import { BIOGRAPHY } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/Container.astro';

export async function getStaticPaths({ paginate }: { paginate: any }) {
	const posts = (await getCollection('blog')).sort(
		(a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
	);
	
	return paginate(posts, { pageSize: 9 });
}

const { page } = Astro.props;
const posts = page.data;


const description = 'Welcome to my personal blog. Here you can find my thoughts on various topics, including machine learning, programming, and some other stuff.'
---

<Layout title="Blog" description={description}>
	<Container>
		<main class="py-12 md:py-24">
			<!-- Header Section -->
			<section class="mb-12 text-center">
				<h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
					Blog
				</h1>
				<p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
					{description}
				</p>
			</section>


			<!-- Blog Grid -->
			<section>
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-8">
					{posts.map((post: any, index: number) => {
						const isFirstPost = index === 0;
						const postCategories = (post.data as any).categories ? [(post.data as any).categories] : [];
						const postTags = post.data.tags || [];
						
						return (
							<article 
								class={`blog-card group ${isFirstPost ? 'md:col-span-2 lg:col-span-1' : ''}`}
							>
								<a href={`/blog/${post.slug}/`} class="block h-full">
									<div class="bg-white dark:bg-gray-800 rounded-xl shadow-sm hover:shadow-lg transition-all duration-300 border border-gray-200 dark:border-gray-700 h-full overflow-hidden group-hover:border-primary/20">
										{post.data.heroImage && (
											<!-- Featured Image -->
											<div class="aspect-video overflow-hidden">
												<img 
													src={post.data.heroImage} 
													alt={post.data.title}
													class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
												/>
											</div>
										)}
										
										<!-- Content -->
										<div class="p-6">
											<!-- Categories/Tags -->
											<div class="flex flex-wrap gap-2 mb-3">
												{postCategories.map(category => (
													<span class="px-2 py-1 text-xs font-medium bg-primary/10 text-primary rounded-full">
														{category}
													</span>
												))}
												{postTags.slice(0, 2).map((tag: any) => (
													<span class="px-2 py-1 text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 rounded-full">
														#{tag}
													</span>
												))}
											</div>
											
											<!-- Title -->
											<h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-3 group-hover:text-primary transition-colors duration-200 line-clamp-2">
												{post.data.title}
											</h2>
											
											<!-- Description -->
											{post.data.description && (
												<p class="text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3">
													{post.data.description}
												</p>
											)}
											
											<!-- Meta -->
											<div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
												<FormattedDate date={post.data.publishDate} />
												<span class="group-hover:text-primary transition-colors duration-200">
													Read more â†’
												</span>
											</div>
										</div>
									</div>
								</a>
							</article>
						);
					})}
				</div>
			</section>

			<!-- Pagination -->
			{page.lastPage > 1 && (
				<section class="mt-12">
					<div class="flex flex-col items-center space-y-4">
						<!-- Pagination Info -->
						<div class="text-sm text-gray-600 dark:text-gray-400">
							Showing {page.start + 1}-{page.end} of {page.total} posts
						</div>
						
						<!-- Pagination Controls -->
						<nav class="flex items-center space-x-2" aria-label="Blog pagination">
							<!-- Previous Button -->
							{page.currentPage > 1 ? (
								<a 
									href={page.currentPage === 2 ? '/blog/' : `/blog/${page.currentPage - 1}/`}
									class="pagination-btn"
								>
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
									</svg>
									<span class="hidden sm:inline">Previous</span>
								</a>
							) : (
								<button 
									class="pagination-btn disabled:opacity-50 disabled:cursor-not-allowed"
									disabled
								>
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
									</svg>
									<span class="hidden sm:inline">Previous</span>
								</button>
							)}
							
							<!-- Page Numbers -->
							<div class="flex items-center space-x-1">
								{Array.from({ length: page.lastPage }, (_, i) => i + 1).map((pageNum) => {
									const isCurrentPage = pageNum === page.currentPage;
									const pageUrl = pageNum === 1 ? '/blog/' : `/blog/${pageNum}/`;
									
									return (
										<a 
											href={pageUrl}
											class={`page-number ${isCurrentPage ? 'active' : ''}`}
										>
											{pageNum}
										</a>
									);
								})}
							</div>
							
							<!-- Next Button -->
							{page.url.next ? (
								<a 
									href={page.url.next}
									class="pagination-btn"
								>
									<span class="hidden sm:inline">Next</span>
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
									</svg>
								</a>
							) : (
								<button 
									class="pagination-btn disabled:opacity-50 disabled:cursor-not-allowed"
									disabled
								>
									<span class="hidden sm:inline">Next</span>
									<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
									</svg>
								</button>
							)}
						</nav>
					</div>
				</section>
			)}
		</main>
	</Container>

	<style>
		.blog-card {
			@apply opacity-100 transition-all duration-300;
		}
		
		.line-clamp-2 {
			display: -webkit-box;
			-webkit-line-clamp: 2;
			-webkit-box-orient: vertical;
			overflow: hidden;
		}
		
		.line-clamp-3 {
			display: -webkit-box;
			-webkit-line-clamp: 3;
			-webkit-box-orient: vertical;
			overflow: hidden;
		}
		
		.pagination-btn {
			@apply px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 dark:focus:ring-offset-gray-900 flex items-center space-x-1;
		}
		
		.page-number {
			@apply px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 dark:focus:ring-offset-gray-900 cursor-pointer;
		}
		
		.page-number.active {
			@apply bg-primary text-white border-primary hover:bg-primary/90 hover:text-white;
		}
		
		.page-number:hover {
			@apply bg-primary/10 text-primary border-primary/20;
		}
	</style>

</Layout>
