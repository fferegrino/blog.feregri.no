---
import { BIOGRAPHY } from '../../consts';
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Container from '../../components/Container.astro';
import BookReview from '../../components/BookReview';
import slugify from 'slugify';

const bookshelf = (await getCollection('bookshelf'));

// Sort books by rating (highest first) within each category
const sortedBookshelf = bookshelf.sort((a, b) => b.data.rating - a.data.rating);

const groupedByCategory = sortedBookshelf.reduce<Record<string, typeof sortedBookshelf>>((acc, book) => {
	const category = book.data.category;
	if (!acc[category]) {
		acc[category] = [];
	}
	acc[category].push(book);
	return acc;
}, {});

// Sort categories by name
const sortedCategories = Object.keys(groupedByCategory).sort();

const description = "I have read some books and I want to share my thoughts about them - along with some recommendations";

const fullText = "I have read some books and I want to share my thoughts about them - along with some recommendations. I hope you find them useful. I will try to keep this list updated. I will also try to add more books as I read them. I hope you enjoy (or hate them) them as much as I did.";
---

<Layout title="My book recommendations" description={description}>
	<Container>
		<main class="py-12 md:py-24">
			<!-- Header Section -->
			<div class="mb-2">
				<h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
					My Bookshelf
				</h1>
				<p class="text-lg text-gray-700 dark:text-gray-300 leading-relaxed mb-2">
					{fullText}
				</p>
			</div>

			<!-- Navigation -->
			<nav class="sticky top-0 z-10 bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm border-b border-gray-200 dark:border-gray-700 mb-8" aria-label="Book categories navigation">
				<div class="py-4">
					<div class="flex flex-wrap justify-center gap-2">
						{sortedCategories.map((category) => (
							<a 
								href={`#${slugify(category, {lower:true})}`} 
								class="inline-flex items-center px-3 py-2 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 dark:focus:ring-offset-gray-900"
								aria-label={`Jump to ${category} section`}
							>
								{category}
								<span class="ml-1 text-xs text-gray-500 dark:text-gray-400" aria-hidden="true">
									({groupedByCategory[category].length})
								</span>
							</a>
						))}
					</div>
				</div>
			</nav>

			<!-- Books by Category -->
			<section class="space-y-16">
				{sortedCategories.map((category) => (
					<div class="relative">
						<h2 
							id={slugify(category, {lower:true})} 
							class="text-3xl font-bold mb-8 text-gray-900 dark:text-white scroll-mt-24"
						>
							{category}
							<span class="ml-3 text-lg font-normal text-gray-500 dark:text-gray-400">
								({groupedByCategory[category].length} books)
							</span>
						</h2>
						<div class="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
							{groupedByCategory[category].map((book) => (
								<BookReview data={book.data} slug={book.slug} />
							))}
						</div>
					</div>
				))}
			</section>
			
			<!-- Back to top button -->
			<div class="fixed bottom-8 right-8 z-20">
				<button 
					onclick="window.scrollTo({top: 0, behavior: 'smooth'})"
					class="bg-primary hover:bg-primary/90 text-white p-3 rounded-full shadow-lg transition-all duration-300 hover:scale-110 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 dark:focus:ring-offset-gray-900"
					aria-label="Back to top"
				>
					<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
					</svg>
				</button>
			</div>
		</main>
	</Container>
	</Layout>